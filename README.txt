	Данный проект представляет из себя маленькую помощь нуждающимся,при поиске работы часто возникает необходимость
просматривать кучу вакансий что бы узнать какие именно навыки наиболее востребованы именно сейчас.Тут представлен поиск по
двум главным(на мой взгляд) сайтам где представлены вакансии. С его помощью вы можете узнать какие навыки встречаются чаще, 
а какие реже.

Важно: для запуска нужно создать БД,и запустить файл DOU/addCities/addCitiesToDb.php

				Краткое описание классов
1)MainVacationPageParser собирает все ссылки(на вакансии) по данному запросу.
2)ParseIdAndCompanyFromLinks(для dou) проходит по всем ссылкам(на вакансии) и возвращяет массив вида 
array(1=>
['company'=>'company name',
'id_vacancies'=>'id']
)
3)ParseIdFromLinks(для stackoverflow)проходит по всем ссылкам(на вакансии) и возвращяет массив вида 
array(1=>
['linksToJob'=>'link',
'id_vacancies'=>'id']
)
4)CacheGetter(dou) проверяет есть ли в базе такая запись или нету.Если в базе запись есть берет её,если нету ложит null в массив
Возвращает массив вида 
array(id_vacancies=>[
'id_vacancies'=>'id',
'company'=>'company name',
'text'=> 'text from db ore null'
])
5)CacheGetter(stackoverflow)Все тоже что и для dou. Возвращает массив вида 
array(id_vacancies=>[
'id_vacancies'=>'id',
'linkToJob'=>'link',
'text'=> 'text from db ore null'
])
6)ProcessingDataArrayWithText Пробегает по ссылкам на вакансии, которых нету в базе.Ложит данные в базу.
возвращяет готовый массив для поиска
7)SearchQuery получает данные для поиска, и организовывает сам поиск.
8)searchQueryHandler получает данные от пользователя и отправляет их на обработку.
9)mySearch.js генерирует таблицу для поиска
10)css.css дизайн сайта)))